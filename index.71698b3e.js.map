{"mappings":"C,A,WIAA,SAAS,EAAqB,CAAG,CAAE,CAAG,EAC9B,CAAA,AAAO,MAAP,GAAe,EAAM,EAAI,MAAM,AAAN,GAAQ,CAAA,EAAM,EAAI,MAAM,AAAN,EAE/C,IAAK,IAAI,EAAI,EAAG,EAAO,AAAI,MAAM,GAAM,EAAI,EAAK,IAAK,CAAI,CAAC,EAAE,CAAG,CAAG,CAAC,EAAE,CAErE,OAAO,CACX,CFDA,SAAS,EAAqB,CAAG,EAC7B,OAAO,ACJX,SAA8B,CAAG,EAC7B,GAAI,MAAM,OAAO,CAAC,GAAM,OAAO,AAAA,EAAqB,EACxD,EDEgC,IAAQ,AGNxC,SAA4B,CAAI,EAC5B,GAAI,AAAkB,aAAlB,OAAO,QAA0B,AAAyB,MAAzB,CAAI,CAAC,OAAO,QAAQ,CAAC,EAAY,AAAsB,MAAtB,CAAI,CAAC,aAAa,CACpF,OAAO,MAAM,IAAI,CAAC,EAE1B,EHE2D,IAAQ,AKJnE,SAAwC,CAAC,CAAE,CAAM,EAC7C,GAAK,GACL,GAAI,AAAa,UAAb,OAAO,EAAgB,OAAO,AAAA,EAAqB,EAFhB,KAAA,GAIvC,IAAI,EAAI,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,EAAG,IAGnD,GADU,WAAN,GAAkB,EAAE,WAAW,EAAE,CAAA,EAAI,EAAE,WAAW,CAAC,IAAI,AAAJ,EACnD,AAAM,QAAN,GAAe,AAAM,QAAN,EAAa,OAAO,MAAM,IAAI,CAAC,GAClD,GAAI,AAAM,cAAN,GAAqB,2CAA2C,IAAI,CAAC,GAAI,OAAO,AAAA,EAAqB,EARlE,KAAA,GAS3C,ELLkG,IAAQ,AIN1G,WACI,MAAM,AAAI,UAAU,uIACxB,GJKA,C,I,E,C,ESPA,SAAS,EAAiB,CAAG,CAAE,CAAG,CAAE,CAAK,EAKrC,OAJI,KAAO,EACP,OAAO,cAAc,CAAC,EAAK,EAAK,CAAE,MAAO,EAAO,WAAY,CAAA,EAAM,aAAc,CAAA,EAAM,SAAU,CAAA,CAAK,GAClG,CAAG,CAAC,EAAI,CAAG,EAEX,CACX,CHCA,IAAM,EAAN,eEIoC,EFJ9B,SAAA,IA0BF,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAe,CACb,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACb,CAED,IAjCE,ACPN,SAA2B,CAAQ,CAAE,CAAW,EAC5C,GAAI,CAAE,CAAA,aAAoB,CAAA,EAAc,MAAM,AAAI,UAAU,oCAChE,EDKM,IAAA,CAAA,GAQJ,AAAA,EAAA,IAAA,CAAA,SAAS,EAAK,QAAQ,CAAC,IAAI,EAC3B,AAAA,EAAA,IAAA,CAAA,QAAQ,GAwBF,AAAwB,IAAxB,EAAa,MAAM,CACrB,MAAM,MAAM,mCAGd,CAAA,IAAI,CAAC,KAAK,CAAG,EAAE,CAEf,IAAK,IAAI,EAAI,EAAG,EAAI,EAAa,MAAM,CAAE,IAAK,CAC5C,GAAI,AAA2B,IAA3B,CAAY,CAAC,EAAE,CAAC,MAAM,CACxB,MAAM,MAAM,uCAGd,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,AAAA,EAAG,CAAY,CAAC,EAAE,EACrC,C,CA7CE,OEI8B,EFJ9B,C,CAgDJ,IAAA,iBAAA,MAAA,SAAe,CAAY,EACzB,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IACrC,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAE,IACxC,GAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,GAAK,CAAY,CAAC,EAAE,CAAC,EAAE,CACzC,MAAO,CAAA,EAKb,MAAO,CAAA,CACT,C,E,CAEA,IAAA,cAAA,MAAA,SAAY,CAAS,EACnB,GAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAY,CACnC,IAAM,EAAc,IAAI,CAAC,cAAc,EAEvC,CAAA,IAAI,CAAC,KAAK,CAAC,CAAW,CAAC,EAAE,CAAC,CAAC,CAAW,CAAC,EAAE,CAAC,CAAG,IAAI,CAAC,eAAe,EACnE,CACF,C,E,CAEA,IAAA,WAAA,MAAA,WAGE,IAAK,I,E,S,C,EACH,IAAM,EAAwB,WAC5B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAG,IACrB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,KAAK,CAAC,EAAE,CAAC,MAAM,CAAG,EAAG,IACnB,IAArB,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,EAAU,AAAyB,IAAzB,EAAK,KAAK,CAAC,EAAE,CAAC,EAAI,EAAE,GAChD,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,CAAG,EAAK,KAAK,CAAC,EAAE,CAAC,EAAI,EAAE,CACvC,EAAK,KAAK,CAAC,EAAE,CAAC,EAAI,EAAE,CAAG,EAI/B,EAiBA,IACA,AAhB2B,WACzB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,KAAK,CAAC,EAAE,CAAC,MAAM,CAAG,EAAG,IAE1C,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,GAAK,EAAK,KAAK,CAAC,EAAE,CAAC,EAAI,EAAE,EACzC,AAAqB,IAArB,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,EAChB,AAAyB,IAAzB,EAAK,KAAK,CAAC,EAAE,CAAC,EAAI,EAAE,GAEpB,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,CAAG,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,CAAG,EAAK,KAAK,CAAC,EAAE,CAAC,EAAI,EAAE,CAC1D,EAAK,KAAK,EAAI,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,CAC9B,EAAK,KAAK,CAAC,EAAE,CAAC,EAAI,EAAE,CAAG,EACvB,IAGN,IAIA,GACF,E,E,I,CAhCM,EAAY,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAC,CAAlC,EAA0C,OAAA,EAAI,KAAK,E,GAE1C,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IAAvC,EAAA,GAgCA,IAAI,CAAC,WAAW,CAAC,GACjB,IAAI,CAAC,sBAAsB,EAC7B,C,E,CAEA,IAAA,YAAA,MAAA,WAGE,IAAK,I,E,S,C,EACH,IAAM,EAAyB,WAC7B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAG,IACrB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,KAAK,CAAC,EAAE,CAAC,MAAM,CAAE,IACf,IAArB,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,EAAU,AAAyB,IAAzB,EAAK,KAAK,CAAC,EAAE,CAAC,EAAI,EAAE,GAChD,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,CAAG,EAAK,KAAK,CAAC,EAAE,CAAC,EAAI,EAAE,CACvC,EAAK,KAAK,CAAC,EAAE,CAAC,EAAI,EAAE,CAAG,EAI/B,EAiBA,IACA,AAhB4B,WAC1B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,KAAK,CAAC,EAAE,CAAC,MAAM,CAAE,IAEtC,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,GAAK,EAAK,KAAK,CAAC,EAAE,CAAC,EAAI,EAAE,EACzC,AAAqB,IAArB,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,EAChB,AAAyB,IAAzB,EAAK,KAAK,CAAC,EAAE,CAAC,EAAI,EAAE,GAEpB,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,CAAG,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,CAAG,EAAK,KAAK,CAAC,EAAE,CAAC,EAAI,EAAE,CAC1D,EAAK,KAAK,EAAI,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,CAC9B,EAAK,KAAK,CAAC,EAAE,CAAC,EAAI,EAAE,CAAG,EACvB,IAGN,IAIA,GACF,E,E,I,CAhCM,EAAY,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAC,CAAlC,EAA0C,OAAA,EAAI,KAAK,E,GAE1C,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IAAvC,EAAA,GAgCA,IAAI,CAAC,WAAW,CAAC,GACjB,IAAI,CAAC,sBAAsB,EAC7B,C,E,CAEA,IAAA,SAAA,MAAA,WAGE,IAAK,I,E,S,C,EACH,IAAM,EAAsB,WAC1B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAG,IACrB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,KAAK,CAAC,EAAE,CAAC,MAAM,CAAG,EAAG,IACnB,IAArB,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,EAAU,AAAyB,IAAzB,EAAK,KAAK,CAAC,EAAI,EAAE,CAAC,EAAE,GAChD,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,CAAG,EAAK,KAAK,CAAC,EAAI,EAAE,CAAC,EAAE,CACvC,EAAK,KAAK,EAAI,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,CAC9B,EAAK,KAAK,CAAC,EAAI,EAAE,CAAC,EAAE,CAAG,EAI/B,EAiBA,IACA,AAhByB,WACvB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,KAAK,CAAC,EAAE,CAAC,MAAM,CAAG,EAAG,IAE1C,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,GAAK,EAAK,KAAK,CAAC,EAAI,EAAE,CAAC,EAAE,EACzC,AAAqB,IAArB,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,EAChB,AAAyB,IAAzB,EAAK,KAAK,CAAC,EAAI,EAAE,CAAC,EAAE,GAEpB,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,CAAG,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,CAAG,EAAK,KAAK,CAAC,EAAI,EAAE,CAAC,EAAE,CAC1D,EAAK,KAAK,EAAI,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,CAC9B,EAAK,KAAK,CAAC,EAAI,EAAE,CAAC,EAAE,CAAG,EACvB,IAGN,IAIA,GACF,E,E,I,CAjCM,EAAY,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAC,CAAlC,EAA0C,OAAA,EAAI,KAAK,E,GAE1C,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IAAvC,EAAA,GAiCA,IAAI,CAAC,WAAW,CAAC,GACjB,IAAI,CAAC,sBAAsB,EAC7B,C,E,CAEA,IAAA,WAAA,MAAA,WAGE,IAAK,I,E,S,C,EACH,IAAM,EAAwB,WAC5B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAG,IACrB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,KAAK,CAAC,EAAE,CAAC,MAAM,CAAE,IACf,IAArB,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,EAAU,AAAyB,IAAzB,EAAK,KAAK,CAAC,EAAI,EAAE,CAAC,EAAE,GAChD,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,CAAG,EAAK,KAAK,CAAC,EAAI,EAAE,CAAC,EAAE,CACvC,EAAK,KAAK,CAAC,EAAI,EAAE,CAAC,EAAE,CAAG,EAI/B,EAiBA,IACA,AAhB2B,WACzB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,KAAK,CAAC,EAAE,CAAC,MAAM,CAAE,IAEtC,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,GAAK,EAAK,KAAK,CAAC,EAAI,EAAE,CAAC,EAAE,EACzC,AAAqB,IAArB,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,EAChB,AAAyB,IAAzB,EAAK,KAAK,CAAC,EAAI,EAAE,CAAC,EAAE,GAEpB,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,CAAG,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,CAAG,EAAK,KAAK,CAAC,EAAI,EAAE,CAAC,EAAE,CAC1D,EAAK,KAAK,EAAI,EAAK,KAAK,CAAC,EAAE,CAAC,EAAE,CAC9B,EAAK,KAAK,CAAC,EAAI,EAAE,CAAC,EAAE,CAAG,EACvB,IAGN,IAIA,GACF,E,E,I,CAhCM,EAAY,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAC,CAAlC,EAA0C,OAAA,EAAI,KAAK,E,GAE1C,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IAAvC,EAAA,GAgCA,IAAI,CAAC,WAAW,CAAC,GACjB,IAAI,CAAC,sBAAsB,EAC7B,C,E,CAEA,IAAA,yBAAA,MAAA,WACE,GAAI,IAAI,CAAC,KAAK,GAAI,CAChB,IAAI,CAAC,MAAM,CAnOX,EAmOmB,QAAQ,CAAC,GAAG,CAE/B,MACF,CAEI,IAAI,CAAC,UAAU,IACjB,CAAA,IAAI,CAAC,MAAM,CAAG,EAAK,QAAQ,CAAC,IAAI,AAAJ,CAEhC,C,E,CAEA,IAAA,aAAA,MAAA,WACE,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IACrC,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAE,IACxC,GAAI,AAAqB,IAArB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAClB,MAAO,CAAA,EAKb,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IACrC,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAE,IACxC,GACE,EAAK,IAAI,CAAC,KAAK,CAAC,MAAM,CAAG,GACvB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,GAAK,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAI,EAAE,EAC1C,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAG,GACvB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,GAAK,IAAI,CAAC,KAAK,CAAC,EAAI,EAAE,CAAC,EAAE,CAE3C,MAAO,CAAA,EAKb,MAAO,CAAA,CACT,C,E,CAEA,IAAA,QAAA,MAAA,WACE,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IACrC,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAE,IACxC,GAAI,AAAqB,OAArB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAClB,MAAO,CAAA,EAKb,MAAO,CAAA,CACT,C,E,CAKA,IAAA,WAAA,MAAA,WACE,OAAO,IAAI,CAAC,KAAK,AACnB,C,E,CAKA,IAAA,WAAA,MAAA,WACE,OAAO,IAAI,CAAC,KAAK,AACnB,C,E,CAYA,IAAA,YAAA,MAAA,WACE,OAAO,IAAI,CAAC,MAAM,AACpB,C,E,CAKA,IAAA,QAAA,MAAA,WACE,GAAI,IAAI,CAAC,MAAM,GAlTb,EAkTuB,QAAQ,CAAC,IAAI,CAAE,CACtC,IAAI,CAAC,KAAK,CAAG,EAEb,IAAI,CAAC,MAAM,CArTX,EAqTmB,QAAQ,CAAC,OAAO,CAEnC,IAAM,EAAc,IAAI,CAAC,cAAc,EAEvC,CAAA,IAAI,CAAC,KAAK,CAAC,CAAW,CAAC,EAAE,CAAC,CAAC,CAAW,CAAC,EAAE,CAAC,CAAG,IAAI,CAAC,eAAe,EACnE,CACF,C,E,CAKA,IAAA,UAAA,MAAA,WACE,IAAI,CAAC,KAAK,CAAG,CACX,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACb,CAEG,IAAI,CAAC,MAAM,GAxUb,EAwUuB,QAAQ,CAAC,IAAI,GACpC,IAAI,CAAC,MAAM,CAzUX,EAyUmB,QAAQ,CAAC,IAAI,CAChC,IAAI,CAAC,KAAK,GAEd,C,E,CAEA,IAAA,kBAAA,MAAA,WACE,OAAO,AAAgB,GAAhB,KAAK,MAAM,GAAW,EAAI,CACnC,C,E,CAEA,IAAA,iBAAA,MAAA,WACE,IAAM,EAAa,EAAE,CAYrB,OAVA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAC,CAAA,CAAK,CAAzB,EACE,EAAI,OAAO,CAAC,SAAC,CAAA,CAAO,CAApB,EACgB,IAAV,GAIJ,EAAW,IAAI,CAAC,CAAC,EAAU,EAAY,CACzC,EACF,GAEO,CAAU,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,GAAM,CAAA,EAAW,MAAM,CAAG,EAAI,CAAA,GAAI,AAC5E,C,E,CE3VkB,AAZpB,SAA2B,CAAM,CAAE,CAAK,EACpC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,IAAK,CACnC,IAAI,EAAa,CAAK,CAAC,EAAE,AACzB,CAAA,EAAW,UAAU,CAAG,EAAW,UAAU,EAAI,CAAA,EACjD,EAAW,YAAY,CAAG,CAAA,EAEtB,UAAW,GAAY,CAAA,EAAW,QAAQ,CAAG,CAAA,CAAjD,EAEA,OAAO,cAAc,CAAC,EAAQ,EAAW,GAAG,CAAE,EAClD,CACJ,EAEsC,AFLhC,EEK4C,SAAS,CAAE,GFLvD,C,IACJ,AAAA,EADI,EACG,WAAW,CAChB,KAAM,OACN,QAAS,UACT,IAAK,MACL,KAAM,MACR,GPVF,IAAM,EAAO,GOuWb,CAAA,EAAiB,CAAjB,EPrWM,EAAmB,SAAS,aAAa,CAAC,eAC1C,EAAW,SAAS,aAAa,CAAC,WAClC,EAAO,SAAS,gBAAgB,CAAC,0BACjC,EAAsB,SAAS,aAAa,CAAC,kBAC7C,EAAoB,SAAS,aAAa,CAAC,gBAC3C,EAAqB,SAAS,aAAa,CAAC,iBAE5C,EAAe,AAAC,EAAG,GAAM,GAAG,CAAC,SAAC,CAApC,EACE,OAAO,EAAI,gBAAgB,CAAC,cAC9B,GAiCA,SAAS,IACP,EAAa,OAAO,CAAC,SAAC,CAAtB,EACE,EAAI,OAAO,CAAC,SAAC,CAAb,EACE,EAAK,WAAW,CAAG,GACnB,EAAK,SAAS,CAAG,YACnB,EACF,EACF,CAEA,SAAS,IACP,EAAa,OAAO,CAAC,SAAC,CAAA,CAAK,CAA3B,EACE,EAAI,OAAO,CAAC,SAAC,CAAA,CAAM,CAAnB,EACE,IAAM,EAAQ,EAAK,QAAQ,EAAE,CAAC,EAAS,CAAC,EAAY,AAEtC,CAAA,IAAV,IAIJ,EAAK,WAAW,CAAG,EACnB,EAAK,SAAS,CAAC,GAAG,CAAE,eAAoB,MAAA,CAAN,IACpC,EACF,EACF,CArDA,EAAS,gBAAgB,CAAC,QAAS,WAC7B,EAAK,SAAS,KAAO,EAAK,QAAQ,CAAC,IAAI,EACzC,EAAK,KAAK,GACV,EAAS,WAAW,CAAG,YAEvB,IACA,EAAiB,WAAW,CAAG,EAE/B,EAAK,OAAO,IAGV,EAAS,SAAS,CAAC,QAAQ,CAAC,WAC9B,EAAS,SAAS,CAAC,MAAM,CAAC,SAC1B,EAAS,SAAS,CAAC,GAAG,CAAC,YAGpB,EAAoB,SAAS,CAAC,QAAQ,CAAC,WAC1C,EAAoB,SAAS,CAAC,GAAG,CAAC,UAG/B,EAAkB,SAAS,CAAC,QAAQ,CAAC,WACxC,EAAkB,SAAS,CAAC,GAAG,CAAC,UAG7B,EAAmB,SAAS,CAAC,QAAQ,CAAC,WACzC,EAAmB,SAAS,CAAC,GAAG,CAAC,UAGnC,GACF,GA0BA,SAAS,gBAAgB,CAAC,UAAW,SAAC,CAAtC,EACM,EAAK,SAAS,KAAO,EAAK,QAAQ,CAAC,OAAO,GACxC,AAAU,cAAV,EAAE,GAAG,CACP,EAAK,QAAQ,GACJ,AAAU,eAAV,EAAE,GAAG,CACd,EAAK,SAAS,GACL,AAAU,YAAV,EAAE,GAAG,CACd,EAAK,MAAM,GACQ,cAAV,EAAE,GAAG,EACd,EAAK,QAAQ,GAIb,CAAC,YAAa,aAAc,UAAW,YAAY,CAAC,QAAQ,CAAC,MAAM,GAAG,IAEtE,IACA,IAEA,EAAiB,WAAW,CAAG,EAAK,QAAQ,KAI5C,EAAK,SAAS,KAAO,EAAK,QAAQ,CAAC,GAAG,EACxC,EAAkB,SAAS,CAAC,MAAM,CAAC,UAGjC,EAAK,SAAS,KAAO,EAAK,QAAQ,CAAC,IAAI,EACzC,EAAmB,SAAS,CAAC,MAAM,CAAC,SAExC,E","sources":["<anon>","src/scripts/main.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js"],"sourcesContent":["(function () {\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$71511d61b312f219(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        (0, $cd5a47cf8ef6d766$export$71511d61b312f219)(this, \"status\", Game.STATUSES.IDLE);\n        (0, $cd5a47cf8ef6d766$export$71511d61b312f219)(this, \"score\", 0);\n        if (initialState.length !== 4) throw Error(\"InitialState should have 4 rows.\");\n        this.state = [];\n        for(var i = 0; i < initialState.length; i++){\n            if (initialState[i].length !== 4) throw Error(\"InitialState should have 4 columns.\");\n            this.state.push((0, $227c6742e0ff6f82$export$71511d61b312f219)(initialState[i]));\n        }\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"isStateEqualTo\",\n            value: function isStateEqualTo(compareState) {\n                for(var i = 0; i < this.state.length; i++)for(var j = 0; j < this.state[i].length; j++){\n                    if (this.state[i][j] !== compareState[i][j]) return false;\n                }\n                return true;\n            }\n        },\n        {\n            key: \"addNewValue\",\n            value: function addNewValue(prevState) {\n                if (!this.isStateEqualTo(prevState)) {\n                    var randomField = this.getRandomField();\n                    this.state[randomField[0]][randomField[1]] = this.getRandomNumber();\n                }\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _loop = function(i) {\n                    var moveLeftWithoutAdding = function() {\n                        for(var k = 0; k < 3; k++){\n                            for(var j = 0; j < _this.state[i].length - 1; j++)if (_this.state[i][j] === 0 && _this.state[i][j + 1] !== 0) {\n                                _this.state[i][j] = _this.state[i][j + 1];\n                                _this.state[i][j + 1] = 0;\n                            }\n                        }\n                    };\n                    var addTwoValuesToLeft = function() {\n                        for(var j = 0; j < _this.state[i].length - 1; j++)if (_this.state[i][j] === _this.state[i][j + 1] && _this.state[i][j] !== 0 && _this.state[i][j + 1] !== 0) {\n                            _this.state[i][j] = _this.state[i][j] + _this.state[i][j + 1];\n                            _this.score += _this.state[i][j];\n                            _this.state[i][j + 1] = 0;\n                            j++;\n                        }\n                    };\n                    moveLeftWithoutAdding();\n                    addTwoValuesToLeft();\n                    moveLeftWithoutAdding();\n                };\n                var _this = this;\n                var prevState = this.state.map(function(row) {\n                    return row.slice();\n                });\n                for(var i = 0; i < this.state.length; i++)_loop(i);\n                this.addNewValue(prevState);\n                this.changeStatusIfGameOver();\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _loop = function(i) {\n                    var moveRightWithoutAdding = function() {\n                        for(var k = 0; k < 3; k++){\n                            for(var j = 1; j < _this.state[i].length; j++)if (_this.state[i][j] === 0 && _this.state[i][j - 1] !== 0) {\n                                _this.state[i][j] = _this.state[i][j - 1];\n                                _this.state[i][j - 1] = 0;\n                            }\n                        }\n                    };\n                    var addTwoValuesToRight = function() {\n                        for(var j = 1; j < _this.state[i].length; j++)if (_this.state[i][j] === _this.state[i][j - 1] && _this.state[i][j] !== 0 && _this.state[i][j - 1] !== 0) {\n                            _this.state[i][j] = _this.state[i][j] + _this.state[i][j - 1];\n                            _this.score += _this.state[i][j];\n                            _this.state[i][j - 1] = 0;\n                            j++;\n                        }\n                    };\n                    moveRightWithoutAdding();\n                    addTwoValuesToRight();\n                    moveRightWithoutAdding();\n                };\n                var _this = this;\n                var prevState = this.state.map(function(row) {\n                    return row.slice();\n                });\n                for(var i = 0; i < this.state.length; i++)_loop(i);\n                this.addNewValue(prevState);\n                this.changeStatusIfGameOver();\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _loop = function(i) {\n                    var moveUpWithoutAdding = function() {\n                        for(var k = 0; k < 3; k++){\n                            for(var j = 0; j < _this.state[i].length - 1; j++)if (_this.state[j][i] === 0 && _this.state[j + 1][i] !== 0) {\n                                _this.state[j][i] = _this.state[j + 1][i];\n                                _this.score += _this.state[i][j];\n                                _this.state[j + 1][i] = 0;\n                            }\n                        }\n                    };\n                    var addTwoValuesToUp = function() {\n                        for(var j = 0; j < _this.state[i].length - 1; j++)if (_this.state[j][i] === _this.state[j + 1][i] && _this.state[j][i] !== 0 && _this.state[j + 1][i] !== 0) {\n                            _this.state[j][i] = _this.state[j][i] + _this.state[j + 1][i];\n                            _this.score += _this.state[i][j];\n                            _this.state[j + 1][i] = 0;\n                            j++;\n                        }\n                    };\n                    moveUpWithoutAdding();\n                    addTwoValuesToUp();\n                    moveUpWithoutAdding();\n                };\n                var _this = this;\n                var prevState = this.state.map(function(row) {\n                    return row.slice();\n                });\n                for(var i = 0; i < this.state.length; i++)_loop(i);\n                this.addNewValue(prevState);\n                this.changeStatusIfGameOver();\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _loop = function(i) {\n                    var moveDownWithoutAdding = function() {\n                        for(var k = 0; k < 3; k++){\n                            for(var j = 1; j < _this.state[i].length; j++)if (_this.state[j][i] === 0 && _this.state[j - 1][i] !== 0) {\n                                _this.state[j][i] = _this.state[j - 1][i];\n                                _this.state[j - 1][i] = 0;\n                            }\n                        }\n                    };\n                    var addTwoValuesToDown = function() {\n                        for(var j = 1; j < _this.state[i].length; j++)if (_this.state[j][i] === _this.state[j - 1][i] && _this.state[j][i] !== 0 && _this.state[j - 1][i] !== 0) {\n                            _this.state[j][i] = _this.state[j][i] + _this.state[j - 1][i];\n                            _this.score += _this.state[j][i];\n                            _this.state[j - 1][i] = 0;\n                            j++;\n                        }\n                    };\n                    moveDownWithoutAdding();\n                    addTwoValuesToDown();\n                    moveDownWithoutAdding();\n                };\n                var _this = this;\n                var prevState = this.state.map(function(row) {\n                    return row.slice();\n                });\n                for(var i = 0; i < this.state.length; i++)_loop(i);\n                this.addNewValue(prevState);\n                this.changeStatusIfGameOver();\n            }\n        },\n        {\n            key: \"changeStatusIfGameOver\",\n            value: function changeStatusIfGameOver() {\n                if (this.isWin()) {\n                    this.status = Game.STATUSES.WIN;\n                    return;\n                }\n                if (this.isGameOver()) this.status = Game.STATUSES.LOSE;\n            }\n        },\n        {\n            key: \"isGameOver\",\n            value: function isGameOver() {\n                for(var i = 0; i < this.state.length; i++)for(var j = 0; j < this.state[i].length; j++){\n                    if (this.state[i][j] === 0) return false;\n                }\n                for(var i1 = 0; i1 < this.state.length; i1++)for(var j1 = 0; j1 < this.state[i1].length; j1++){\n                    if (j1 < this.state.length - 1 && this.state[i1][j1] === this.state[i1][j1 + 1] || i1 < this.state.length - 1 && this.state[i1][j1] === this.state[i1 + 1][j1]) return false;\n                }\n                return true;\n            }\n        },\n        {\n            key: \"isWin\",\n            value: function isWin() {\n                for(var i = 0; i < this.state.length; i++)for(var j = 0; j < this.state[i].length; j++){\n                    if (this.state[i][j] === 2048) return true;\n                }\n                return false;\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                if (this.status === Game.STATUSES.IDLE) {\n                    this.score = 0;\n                    this.status = Game.STATUSES.PLAYING;\n                    var randomField = this.getRandomField();\n                    this.state[randomField[0]][randomField[1]] = this.getRandomNumber();\n                }\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                this.state = [\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ];\n                if (this.status !== Game.STATUSES.IDLE) {\n                    this.status = Game.STATUSES.IDLE;\n                    this.start();\n                }\n            }\n        },\n        {\n            key: \"getRandomNumber\",\n            value: function getRandomNumber() {\n                return Math.random() < 0.1 ? 4 : 2;\n            }\n        },\n        {\n            key: \"getRandomField\",\n            value: function getRandomField() {\n                var freePlaces = [];\n                this.state.forEach(function(row, rowIndex) {\n                    row.forEach(function(value, columnIndex) {\n                        if (value !== 0) return;\n                        freePlaces.push([\n                            rowIndex,\n                            columnIndex\n                        ]);\n                    });\n                });\n                return freePlaces[Math.floor(Math.random() * (freePlaces.length - 1 + 1))];\n            }\n        }\n    ]);\n    return Game;\n}();\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"STATUSES\", {\n    IDLE: \"idle\",\n    PLAYING: \"playing\",\n    WIN: \"win\",\n    LOSE: \"lose\"\n});\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$gameScoreElement = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$startBtn = document.querySelector(\".button\");\nvar $197cd56b15c33885$var$rows = document.querySelectorAll(\".game-field .field-row\");\nvar $197cd56b15c33885$var$messageStartElement = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageWinElement = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messageLoseElement = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$gameElements = (0, $227c6742e0ff6f82$export$71511d61b312f219)($197cd56b15c33885$var$rows).map(function(row) {\n    return row.querySelectorAll(\".field-cell\");\n});\n$197cd56b15c33885$var$startBtn.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$game.getStatus() === $3d28d7f1aac198f5$exports.STATUSES.IDLE) {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$startBtn.textContent = \"Restart\";\n    } else {\n        $197cd56b15c33885$var$clearBoard();\n        $197cd56b15c33885$var$gameScoreElement.textContent = 0;\n        $197cd56b15c33885$var$game.restart();\n    }\n    if ($197cd56b15c33885$var$startBtn.classList.contains(\"start\")) {\n        $197cd56b15c33885$var$startBtn.classList.remove(\"start\");\n        $197cd56b15c33885$var$startBtn.classList.add(\"restart\");\n    }\n    if (!$197cd56b15c33885$var$messageStartElement.classList.contains(\"hidden\")) $197cd56b15c33885$var$messageStartElement.classList.add(\"hidden\");\n    if (!$197cd56b15c33885$var$messageWinElement.classList.contains(\"hidden\")) $197cd56b15c33885$var$messageWinElement.classList.add(\"hidden\");\n    if (!$197cd56b15c33885$var$messageLoseElement.classList.contains(\"hidden\")) $197cd56b15c33885$var$messageLoseElement.classList.add(\"hidden\");\n    $197cd56b15c33885$var$setValuesOnBoard();\n});\nfunction $197cd56b15c33885$var$clearBoard() {\n    $197cd56b15c33885$var$gameElements.forEach(function(row) {\n        row.forEach(function(cell) {\n            cell.textContent = \"\";\n            cell.className = \"field-cell\";\n        });\n    });\n}\nfunction $197cd56b15c33885$var$setValuesOnBoard() {\n    $197cd56b15c33885$var$gameElements.forEach(function(row, rowIndex) {\n        row.forEach(function(cell, columnIndex) {\n            var value = $197cd56b15c33885$var$game.getState()[rowIndex][columnIndex];\n            if (value === 0) return;\n            cell.textContent = value;\n            cell.classList.add(\"field-cell--\".concat(value));\n        });\n    });\n}\ndocument.addEventListener(\"keydown\", function(e) {\n    if ($197cd56b15c33885$var$game.getStatus() === $3d28d7f1aac198f5$exports.STATUSES.PLAYING) {\n        if (e.key === \"ArrowLeft\") $197cd56b15c33885$var$game.moveLeft();\n        else if (e.key === \"ArrowRight\") $197cd56b15c33885$var$game.moveRight();\n        else if (e.key === \"ArrowUp\") $197cd56b15c33885$var$game.moveUp();\n        else if (e.key === \"ArrowDown\") $197cd56b15c33885$var$game.moveDown();\n        if ([\n            \"ArrowLeft\",\n            \"ArrowRight\",\n            \"ArrowUp\",\n            \"ArrowDown\"\n        ].includes(event.key)) {\n            $197cd56b15c33885$var$clearBoard();\n            $197cd56b15c33885$var$setValuesOnBoard();\n            $197cd56b15c33885$var$gameScoreElement.textContent = $197cd56b15c33885$var$game.getScore();\n        }\n    }\n    if ($197cd56b15c33885$var$game.getStatus() === $3d28d7f1aac198f5$exports.STATUSES.WIN) $197cd56b15c33885$var$messageWinElement.classList.remove(\"hidden\");\n    if ($197cd56b15c33885$var$game.getStatus() === $3d28d7f1aac198f5$exports.STATUSES.LOSE) $197cd56b15c33885$var$messageLoseElement.classList.remove(\"hidden\");\n});\n\n})();\n//# sourceMappingURL=index.71698b3e.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst gameScoreElement = document.querySelector('.game-score');\nconst startBtn = document.querySelector('.button');\nconst rows = document.querySelectorAll('.game-field .field-row');\nconst messageStartElement = document.querySelector('.message-start');\nconst messageWinElement = document.querySelector('.message-win');\nconst messageLoseElement = document.querySelector('.message-lose');\n\nconst gameElements = [...rows].map((row) => {\n  return row.querySelectorAll('.field-cell');\n});\n\nstartBtn.addEventListener('click', () => {\n  if (game.getStatus() === Game.STATUSES.IDLE) {\n    game.start();\n    startBtn.textContent = 'Restart';\n  } else {\n    clearBoard();\n    gameScoreElement.textContent = 0;\n\n    game.restart();\n  }\n\n  if (startBtn.classList.contains('start')) {\n    startBtn.classList.remove('start');\n    startBtn.classList.add('restart');\n  }\n\n  if (!messageStartElement.classList.contains('hidden')) {\n    messageStartElement.classList.add('hidden');\n  }\n\n  if (!messageWinElement.classList.contains('hidden')) {\n    messageWinElement.classList.add('hidden');\n  }\n\n  if (!messageLoseElement.classList.contains('hidden')) {\n    messageLoseElement.classList.add('hidden');\n  }\n\n  setValuesOnBoard();\n});\n\nfunction clearBoard() {\n  gameElements.forEach((row) => {\n    row.forEach((cell) => {\n      cell.textContent = '';\n      cell.className = 'field-cell';\n    });\n  });\n}\n\nfunction setValuesOnBoard() {\n  gameElements.forEach((row, rowIndex) => {\n    row.forEach((cell, columnIndex) => {\n      const value = game.getState()[rowIndex][columnIndex];\n\n      if (value === 0) {\n        return;\n      }\n\n      cell.textContent = value;\n      cell.classList.add(`field-cell--${value}`);\n    });\n  });\n}\n\ndocument.addEventListener('keydown', (e) => {\n  if (game.getStatus() === Game.STATUSES.PLAYING) {\n    if (e.key === 'ArrowLeft') {\n      game.moveLeft();\n    } else if (e.key === 'ArrowRight') {\n      game.moveRight();\n    } else if (e.key === 'ArrowUp') {\n      game.moveUp();\n    } else if (e.key === 'ArrowDown') {\n      game.moveDown();\n    }\n\n    if (\n      ['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown'].includes(event.key)\n    ) {\n      clearBoard();\n      setValuesOnBoard();\n\n      gameScoreElement.textContent = game.getScore();\n    }\n  }\n\n  if (game.getStatus() === Game.STATUSES.WIN) {\n    messageWinElement.classList.remove('hidden');\n  }\n\n  if (game.getStatus() === Game.STATUSES.LOSE) {\n    messageLoseElement.classList.remove('hidden');\n  }\n});\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  static STATUSES = {\n    IDLE: 'idle',\n    PLAYING: 'playing',\n    WIN: 'win',\n    LOSE: 'lose',\n  };\n\n  status = Game.STATUSES.IDLE;\n  score = 0;\n\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    if (initialState.length !== 4) {\n      throw Error('InitialState should have 4 rows.');\n    }\n\n    this.state = [];\n\n    for (let i = 0; i < initialState.length; i++) {\n      if (initialState[i].length !== 4) {\n        throw Error('InitialState should have 4 columns.');\n      }\n\n      this.state.push([...initialState[i]]);\n    }\n  }\n\n  isStateEqualTo(compareState) {\n    for (let i = 0; i < this.state.length; i++) {\n      for (let j = 0; j < this.state[i].length; j++) {\n        if (this.state[i][j] !== compareState[i][j]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  addNewValue(prevState) {\n    if (!this.isStateEqualTo(prevState)) {\n      const randomField = this.getRandomField();\n\n      this.state[randomField[0]][randomField[1]] = this.getRandomNumber();\n    }\n  }\n\n  moveLeft() {\n    const prevState = this.state.map((row) => row.slice());\n\n    for (let i = 0; i < this.state.length; i++) {\n      const moveLeftWithoutAdding = () => {\n        for (let k = 0; k < 3; k++) {\n          for (let j = 0; j < this.state[i].length - 1; j++) {\n            if (this.state[i][j] === 0 && this.state[i][j + 1] !== 0) {\n              this.state[i][j] = this.state[i][j + 1];\n              this.state[i][j + 1] = 0;\n            }\n          }\n        }\n      };\n\n      const addTwoValuesToLeft = () => {\n        for (let j = 0; j < this.state[i].length - 1; j++) {\n          if (\n            this.state[i][j] === this.state[i][j + 1] &&\n            this.state[i][j] !== 0 &&\n            this.state[i][j + 1] !== 0\n          ) {\n            this.state[i][j] = this.state[i][j] + this.state[i][j + 1];\n            this.score += this.state[i][j];\n            this.state[i][j + 1] = 0;\n            j++;\n          }\n        }\n      };\n\n      moveLeftWithoutAdding();\n      addTwoValuesToLeft();\n      moveLeftWithoutAdding();\n    }\n\n    this.addNewValue(prevState);\n    this.changeStatusIfGameOver();\n  }\n\n  moveRight() {\n    const prevState = this.state.map((row) => row.slice());\n\n    for (let i = 0; i < this.state.length; i++) {\n      const moveRightWithoutAdding = () => {\n        for (let k = 0; k < 3; k++) {\n          for (let j = 1; j < this.state[i].length; j++) {\n            if (this.state[i][j] === 0 && this.state[i][j - 1] !== 0) {\n              this.state[i][j] = this.state[i][j - 1];\n              this.state[i][j - 1] = 0;\n            }\n          }\n        }\n      };\n\n      const addTwoValuesToRight = () => {\n        for (let j = 1; j < this.state[i].length; j++) {\n          if (\n            this.state[i][j] === this.state[i][j - 1] &&\n            this.state[i][j] !== 0 &&\n            this.state[i][j - 1] !== 0\n          ) {\n            this.state[i][j] = this.state[i][j] + this.state[i][j - 1];\n            this.score += this.state[i][j];\n            this.state[i][j - 1] = 0;\n            j++;\n          }\n        }\n      };\n\n      moveRightWithoutAdding();\n      addTwoValuesToRight();\n      moveRightWithoutAdding();\n    }\n\n    this.addNewValue(prevState);\n    this.changeStatusIfGameOver();\n  }\n\n  moveUp() {\n    const prevState = this.state.map((row) => row.slice());\n\n    for (let i = 0; i < this.state.length; i++) {\n      const moveUpWithoutAdding = () => {\n        for (let k = 0; k < 3; k++) {\n          for (let j = 0; j < this.state[i].length - 1; j++) {\n            if (this.state[j][i] === 0 && this.state[j + 1][i] !== 0) {\n              this.state[j][i] = this.state[j + 1][i];\n              this.score += this.state[i][j];\n              this.state[j + 1][i] = 0;\n            }\n          }\n        }\n      };\n\n      const addTwoValuesToUp = () => {\n        for (let j = 0; j < this.state[i].length - 1; j++) {\n          if (\n            this.state[j][i] === this.state[j + 1][i] &&\n            this.state[j][i] !== 0 &&\n            this.state[j + 1][i] !== 0\n          ) {\n            this.state[j][i] = this.state[j][i] + this.state[j + 1][i];\n            this.score += this.state[i][j];\n            this.state[j + 1][i] = 0;\n            j++;\n          }\n        }\n      };\n\n      moveUpWithoutAdding();\n      addTwoValuesToUp();\n      moveUpWithoutAdding();\n    }\n\n    this.addNewValue(prevState);\n    this.changeStatusIfGameOver();\n  }\n\n  moveDown() {\n    const prevState = this.state.map((row) => row.slice());\n\n    for (let i = 0; i < this.state.length; i++) {\n      const moveDownWithoutAdding = () => {\n        for (let k = 0; k < 3; k++) {\n          for (let j = 1; j < this.state[i].length; j++) {\n            if (this.state[j][i] === 0 && this.state[j - 1][i] !== 0) {\n              this.state[j][i] = this.state[j - 1][i];\n              this.state[j - 1][i] = 0;\n            }\n          }\n        }\n      };\n\n      const addTwoValuesToDown = () => {\n        for (let j = 1; j < this.state[i].length; j++) {\n          if (\n            this.state[j][i] === this.state[j - 1][i] &&\n            this.state[j][i] !== 0 &&\n            this.state[j - 1][i] !== 0\n          ) {\n            this.state[j][i] = this.state[j][i] + this.state[j - 1][i];\n            this.score += this.state[j][i];\n            this.state[j - 1][i] = 0;\n            j++;\n          }\n        }\n      };\n\n      moveDownWithoutAdding();\n      addTwoValuesToDown();\n      moveDownWithoutAdding();\n    }\n\n    this.addNewValue(prevState);\n    this.changeStatusIfGameOver();\n  }\n\n  changeStatusIfGameOver() {\n    if (this.isWin()) {\n      this.status = Game.STATUSES.WIN;\n\n      return;\n    }\n\n    if (this.isGameOver()) {\n      this.status = Game.STATUSES.LOSE;\n    }\n  }\n\n  isGameOver() {\n    for (let i = 0; i < this.state.length; i++) {\n      for (let j = 0; j < this.state[i].length; j++) {\n        if (this.state[i][j] === 0) {\n          return false;\n        }\n      }\n    }\n\n    for (let i = 0; i < this.state.length; i++) {\n      for (let j = 0; j < this.state[i].length; j++) {\n        if (\n          (j < this.state.length - 1 &&\n            this.state[i][j] === this.state[i][j + 1]) ||\n          (i < this.state.length - 1 &&\n            this.state[i][j] === this.state[i + 1][j])\n        ) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  isWin() {\n    for (let i = 0; i < this.state.length; i++) {\n      for (let j = 0; j < this.state[i].length; j++) {\n        if (this.state[i][j] === 2048) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    return this.status;\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    if (this.status === Game.STATUSES.IDLE) {\n      this.score = 0;\n\n      this.status = Game.STATUSES.PLAYING;\n\n      const randomField = this.getRandomField();\n\n      this.state[randomField[0]][randomField[1]] = this.getRandomNumber();\n    }\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.state = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    if (this.status !== Game.STATUSES.IDLE) {\n      this.status = Game.STATUSES.IDLE;\n      this.start();\n    }\n  }\n\n  getRandomNumber() {\n    return Math.random() < 0.1 ? 4 : 2;\n  }\n\n  getRandomField() {\n    const freePlaces = [];\n\n    this.state.forEach((row, rowIndex) => {\n      row.forEach((value, columnIndex) => {\n        if (value !== 0) {\n          return;\n        }\n\n        freePlaces.push([rowIndex, columnIndex]);\n      });\n    });\n\n    return freePlaces[Math.floor(Math.random() * (freePlaces.length - 1 + 1))];\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$3d28d7f1aac198f5$exports","$cd5a47cf8ef6d766$export$71511d61b312f219","obj","key","value","defineProperty","enumerable","configurable","writable","$3d28d7f1aac198f5$var$Game","protoProps","Game","initialState","arguments","instance","Constructor","STATUSES","IDLE","Error","state","push","compareState","j","prevState","isStateEqualTo","randomField","getRandomField","getRandomNumber","_loop","moveLeftWithoutAdding","k","_this","addTwoValuesToLeft","score","map","row","addNewValue","changeStatusIfGameOver","moveRightWithoutAdding","addTwoValuesToRight","moveUpWithoutAdding","addTwoValuesToUp","moveDownWithoutAdding","addTwoValuesToDown","isWin","status","WIN","isGameOver","LOSE","i1","j1","PLAYING","start","Math","random","freePlaces","forEach","rowIndex","columnIndex","floor","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","$197cd56b15c33885$var$game","$197cd56b15c33885$var$gameScoreElement","document","querySelector","$197cd56b15c33885$var$startBtn","$197cd56b15c33885$var$rows","querySelectorAll","$197cd56b15c33885$var$messageStartElement","$197cd56b15c33885$var$messageWinElement","$197cd56b15c33885$var$messageLoseElement","$197cd56b15c33885$var$gameElements","$197cd56b15c33885$var$clearBoard","cell","textContent","className","$197cd56b15c33885$var$setValuesOnBoard","getState","classList","add","concat","addEventListener","getStatus","restart","contains","remove","e","moveLeft","moveRight","moveUp","moveDown","includes","event","getScore"],"version":3,"file":"index.71698b3e.js.map"}